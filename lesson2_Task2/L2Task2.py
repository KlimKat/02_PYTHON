list_1 = [1, 5]
print(list_1) #выведет текущий список
list_1.append(8) #добавит элемент в конец списка
print(list_1) #выведет список уже с добавленным эл-м

###################
list_1 = [] 
print(list_1) #выведет пустой список
for i in range(5): #берутся элементы от 0 до 5
    list_1.append(i) #каждый проход цикла добавляет в конец списка элемент от 0 до 5, сначала 0, на след этапе 1, на след 2 и тд до 5, а потом программа останавливается
    print(list_1) #так как внутри цикла, то выводит каждый раз обновившийся список с каждым проходом цикла

###################
list_1 = [12, 7, -1, 21, 0]
#Метод pop удаляет последний элемент из списка и показывает его (если удалает 0, то показывает 0 и список без 0 например): 
print(list_1.pop()) # 0 (покажет 0 и список без 0 как внизу)
print(list_1) # [12, 7, -1, 21] 
print(list_1.pop()) # 21
print(list_1) # [12, 7, -1] 
print(list_1.pop()) # -1 
print(list_1) # [12, 7]

#Надо указать значение индекса в качестве аргумента функции pop (чтобы конкретный элемет удалить):
list_1 = [12, 7, -1, 21, 0]
print(list_1.pop(0)) # 12
print(list_1) # [7, -1, 21, 0]

###################
#Чтобы добавить элемент на нужную позицию, исп-ем функцию insert с указанием индекса (позиции) и значения:
list_1 = [12, 7, -1, 21, 0]
print(list_1.insert(2, 11)) #2 это позиция, 11 это значение
print(list_1) # [12, 7, 11, -1, 21, 0]

##################
#демонстрация вариантов среза списка (отрицательное число в индексе — счёт с конца списка): 
list_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(list_1[0]) #1
print(list_1[1]) #2
print(list_1[len(list_1)-1]) #10         #вычисляем индекс последнего эл-та в списке, вычитая 1 из длины списка --> 
#--> индексация в Python начинается с нуля, поэтому индекс последнего элемента списка длиной 10 будет 9 (10 - 1 = 9)
print(list_1[-1]) #10 
print(list_1[-5]) #6
print(list_1[:]) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] #если перед : ничего нет, то мы начинаем с начала списка,--> 
#--> если после : ничего нет, то заканчиваем концом списка
print(list_1[:2]) # [1, 2], потому что последний эл-т не берем никогда, поэтому будут выведены числа с индексом 0 и 1
print(list_1[len(list_1)-2:]) #[9, 10]
print(list_1[2:9]) # [3, 4, 5, 6, 7, 8, 9]   #тут интервал берется от эл-та с индексом 2 до эл-та с индексом 9, -->
#--> но так как последний эл-т не берется, то выводится последним эл-т с индексом 8, у нас это цифра 9
print(list_1[6:-18]) #[]           #Когда мы указываем -18 в качестве конечного индекса, это означает, что мы хотим, -->
#--> чтобы срез заканчивался на 18-й позиции с конца списка, однако, наш список list_1 содержит только 10 элементов. -->
#--> Поэтому, индекс -18 выходит за пределы диапазона списка. В Python, если конечный индекс среза выходит за пределы списка, -->
#--> он считается как индекс, равный длине списка. Это эквивалентно list_1[6:0]. Когда начальный индекс (6) -->
#--> больше конечного индекса (0), срез не имеет элементов, и результатом является пустой список.
print(list_1[0:len(list_1):6]) # [1, 7]
print(list_1[::6]) # [1, 7]