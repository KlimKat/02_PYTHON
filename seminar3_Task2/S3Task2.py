# Задача No19. 
# Дана последовательность из N целых чисел и число K. 
# Необходимо сдвинуть всю последовательность (сдвиг - циклический) 
# на K элементов вправо, K – положительное число.
# Input: [1, 2, 3, 4, 5] k = 3 
# Output: [4, 5, 1, 2, 3]


list_1 = [1, 2, 3, 4, 5]
k = int(input())
k = k % len(list_1) #находим остаток от деления k на длину списка list_1. 
#--> Это необходимо для того, чтобы избежать лишних циклических сдвигов, 
#--> если k больше длины списка. Например, если длина списка равна 5, то сдвиг 
#--> на 5 или 10 элементов вернет список в его первоначальное состояние.

list_res = []
for i in range(k):
    list_res.append(list_1[len(list_1) - 1 - i]) #len(list_1) - 1 - i вычисляет индекс элемента, начиная с конца списка
#--> list_1[len(list_1) - 1 - i] добавляет этот элемент в список list_res. Таким образом, мы добавляем в list_res последние 
#--> k элементов из list_1 в обратном порядке
print(list_res)

for i in range(len(list_1) - k):
    list_res.append(list_1[i]) #list_1[i] добавляет элемент из начала списка list_1 в list_res
#--> Таким образом, мы добавляем в list_res оставшиеся элементы списка list_1
print(list_res)